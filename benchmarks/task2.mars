fn quick_sort(arr: Vec<i64>) -> Vec<i64> {
    var l = len(&arr);
    if l <= 1 {
        return arr;
    }

    var pivot = arr[0];
    var left: Vec<i64> = [];
    var right: Vec<i64> = [];

    var i: i64 = 1;
    while i < l {
        if arr[i] < pivot {
            vec_push(&left, arr[i]);
        } else {
            vec_push(&right, arr[i]);
        }
    }

    var result = quick_sort(left);
    vec_push(&result, pivot);
    var rightRes = quick_sort(right);

    i = 0;
    while i < len(&rightRes) {
        vec_push(&result, rightRes[i]);
    }

    return result;
}

fn main() -> void {
    var arr: Vec<i64> = [3, 6, 8, 10, 1, 2, 1];
    var sorted = quick_sort(arr);


    var i = 0;
    while i < len(&sorted) {
        var cur = sorted[i];
        println("{cur}");
    }

    return;
}
